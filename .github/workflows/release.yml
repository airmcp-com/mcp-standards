name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Generate changelog
        id: changelog
        run: |
          VERSION="${{ github.ref_name }}"
          PREVIOUS_TAG=$(git describe --abbrev=0 --tags ${VERSION}^ 2>/dev/null || echo "")

          if [ -z "$PREVIOUS_TAG" ]; then
            COMMITS=$(git log --pretty=format:"- %s (%h)" ${VERSION})
          else
            COMMITS=$(git log --pretty=format:"- %s (%h)" ${PREVIOUS_TAG}..${VERSION})
          fi

          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMITS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            ## What's Changed

            ${{ steps.changelog.outputs.changelog }}

            ## Installation

            **Python users:**
            ```bash
            pip install airmcp==${{ github.ref_name }}
            ```

            **npm users:**
            ```bash
            npx airmcp@${{ github.ref_name }}
            ```

            ## Full Changelog
            https://github.com/${{ github.repository }}/compare/${{ steps.changelog.outputs.previous_tag }}...${{ github.ref_name }}
          draft: false
          prerelease: ${{ contains(github.ref_name, 'beta') || contains(github.ref_name, 'alpha') }}

  notify:
    runs-on: ubuntu-latest
    needs: [release]
    if: success()
    steps:
      - name: Notify success
        run: |
          echo "Release ${{ github.ref_name }} created successfully"
          echo "PyPI: https://pypi.org/project/airmcp/"
          echo "npm: https://www.npmjs.com/package/airmcp"
